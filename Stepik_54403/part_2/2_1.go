package m_2_1

import "fmt"

// Напишите функцию f(), которая будет принимать строку text и выводить ее (печатать на экране).
// От вас требуется дописать только эту функцию, считайте что функция main() уже объявлена, считывать с консоли ничего не нужно!
// Пакет "fmt" уже импортирован!
// func f(text string) {
// 	fmt.Println(text)
// }

// Напишите функцию, находящую наименьшее из четырех введённых в этой же функции чисел.
// Входные данные
// Вводится четыре числа.
// Выходные данные
// Необходимо вернуть из функции наименьшее из 4-х данных чисел
// func minimumFromFour() int {
// 	var a, minimum int
// 	fmt.Scan(&a)
// 	minimum = a
// 	for i := 0; i < 3; i++ {
// 		fmt.Scan(&a)
// 		if a < minimum {
// 			minimum = a
// 		}
// 	}
// 	return minimum
// }

// присваиваем первое значение в цикле
// var min, num int
// for i:=0;i<4; i++{
// 	fmt.Scan(&num)
// 	if i==0 || num < min {
// 		min = num
// 	}
// }
// return min

// Напишите "функцию голосования", возвращающую то значение (0 или 1), которое среди значений ее аргументов x, y, z встречается чаще.
// Входные данные
// Вводится 3 числа - x, y и z (x, y и z равны 0 или 1).
// Выходные данные
// Необходимо вернуть значение функции от x, y и z.

// func vote(x int, y int, z int) int {
// 	count := x + y + z
// 	if count > 1 {
// 		return 1
// 	} else {
// 		return 0
// 	}
// }

// альтернатива в одну строчку
// return (x + y + z) / 2

// альтернатива с использованием логики) если первые две равны - то они решают, если они разные - решает третья цифра
// if x == y {
// 	return x
// }
// return z

// Последовательность Фибоначчи определена следующим образом: φ1=1, φ2=1, φn=φn-1+φn-2 при n>1.
// Начало ряда Фибоначчи выглядит следующим образом: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, ...
// Напишите функцию, которая по указанному натуральному n возвращает φn.
// Входные данные
// Вводится одно число n.
// Выходные данные
// Необходимо вывести  значение φn.
// func fibonacci(n int) int {
// 	result := 1
// 	previous := 1
// 	for i := 3; i <= n; i++ {
// 		previous, result = result, previous+result
// 	}
// 	return result
// }

// Напишите функцию sumInt, принимающую переменное количество аргументов типа int, и возвращающую количество полученных
// функцией аргументов и их сумму. Пакет "fmt" уже импортирован, функция и пакет main объявлены.
// Пример вызова вашей функции:
// a, b := sumInt(1, 0)
// fmt.Println(a, b)
// Результат: 2, 1
// args ...int
// func sumInt(a ...int) (int, int) {
// 	sum, count := 0, 0
// 	for _, val := range a {
// 		sum += val
// 		count++
// 	}
// 	return count, sum
// }

// объявляем имена переменных которые надо вернуть сразу в заголовке
// func sumInt(n ...int ) (c, s int) {
//     for _, e := range n {
//         c++
//         s+=e
//     }
//     return
// }

func main() {
	// fmt.Println(sumInt(1, 2, 3, 4, 5))
	fmt.Println("end")
}

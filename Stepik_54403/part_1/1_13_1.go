package main

import "fmt"

func main() {

	// Самое большое число, кратное 7
	// Найдите самое большее число на отрезке от a до b, кратное 7 .
	// Входные данные
	// Вводится два целых числа a и b (a≤b).
	// Выходные данные
	// Найдите самое большее число на отрезке от a до b (отрезок включает в себя числа a и b), кратное 7 , или выведите "NO" - если таковых нет.
	// var a, b int
	// fmt.Scan(&a, &b)
	// for i := b; a <= i; i-- {
	// 	if i%7 == 0 {
	// 		fmt.Println(i)
	// 		break
	// 	} else if i == a {
	// 		fmt.Println("NO")
	// 	}
	// }

	// return прерывает выполнение функции main, поэтому можно использовать его вместо break, и отпадёт необходимость во второй проверке
	// var a, b int
	// fmt.Scan(&a, &b)
	// for i := b; i > a; i-- {
	// 	if i%7 == 0 {
	// 		fmt.Println(i)
	// 		return
	// 	}
	// }
	// fmt.Println("NO")

	// можно не объявлять счетчик а уменьшать значение b каждый цикл
	// for ; a <= b ; b-- {
	//     if (b % 7) == 0 {
	//         fmt.Print(b)
	//         break
	//     }else if a == b {
	//         fmt.Print("NO")
	//     }

	// По данному числу n закончите фразу "На лугу пасется..." одним из возможных продолжений: "n коров", "n корова", "n коровы",
	// правильно склоняя слово "корова".
	// Входные данные
	// Дано число n (0<n<100).
	// Выходные данные
	// Программа должна вывести введенное число n и одно из слов (на латинице): korov, korova или korovy, например, 1 korova, 2 korovy, 5 korov.
	// Между числом и словом должен стоять ровно один пробел.
	// 1, 21, 31 ... 91 - корова n % 10 == 1 && n != 11
	// 2, 3, 4 , 22-24 .. 94 коровы - (2 <= n % 10 && n%10 <= 4)
	// 5 - 20, 25-30...95 коров - (4 < n && n < 21) || (4 < n % 10 && n % 10 < 10

	// var n int
	// fmt.Scan(&n)
	// switch {
	// case n % 10 == 1 && n != 11:
	// 	fmt.Println(n, "korova")
	// case 5 <= n && n <= 20:
	// 	fmt.Println(n, "korov")
	// case 2 <= n % 10 && n%10 <= 4:
	// 	fmt.Println(n, "korovy")
	// default:
	// 	fmt.Println(n, "korov")
	// }

	fmt.Println(" ")
}
